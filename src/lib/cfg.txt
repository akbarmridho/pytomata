BREAK -> break
CONST -> const
CASE -> case
CATCH -> catch
CONTINUE -> continue
DEFAULT -> default
DELETE -> delete
ELSE -> else
FALSE -> false
FINALLY -> finally
FOR -> for
FUNCTION -> function
IF -> if
ELSEIF -> elif
LET -> let
NULL -> null
RETURN -> return
SWITCH -> switch
THROW -> throw
WHILE -> while
VAR -> var
TRUE -> true
TRY -> try
VARIABLE -> variable
CBRACKETL -> cbracketl
CBRACKETR -> cbracketr
RBRACKETL -> rbracketl
RBRACKETR -> rbracketr
SBRACKETL -> sbracketl
SBRACKETR -> sbracketr
NEWLINE -> nl
SEMICOLON -> semicolon
COLON -> colon
STRING -> string
NUMBER -> number
PLUS -> plus
PLUSEQ -> pluseq
MINUS -> minus
MINEQ -> mineq
DIVIDE -> divide
DIVEQ -> divq
MULTIPLY -> multiply
MULEQ -> muleq
MOD -> mod
INC -> inc 
DEC -> dec
COMMA -> comma
ASSIGN -> assign
GREATER -> greater
GREATER_EQUAL -> egreater
NEQUAL -> nequal
NOT -> not
LESS -> less
LESS_EQUAL -> lequal
STRONGLY_EQUAL -> sequal
WEAKLY_EQUAL -> wequal
STRONGLY_NEQUAL -> snequal
WEAKLY_NEQUAL -> wnequal
AND -> and
OR -> or
ASSIGNABLE -> NULL
ASSIGNABLE -> VARIABLE
ASSIGNABLE -> NUMBER
ASSIGNABLE -> STRING
ASSIGNABLE -> LOGIC_EXPR
ASSIGNABLE -> RBRACKETL ASSIGNABLE RBRACKETR
ASSIGNABLE -> VARIABLE SBRACKETL ASSIGNABLE SBRACKETR
ASSIGNABLE -> ARRAY
LOGIC_EXPR -> TRUE
LOGIC_EXPR -> FALSE
ARRAY -> SBRACKETL SBRACKETR
ARRAY -> SBRACKETL ARR_ELS SBRACKETSR
ARR_ELS -> ASSIGNABLE
ARR_ELS -> ARR_ELS COMMA ARR_ELS
S -> NEWLINE S
S -> S NEWLINE
S -> NEWLINE
S -> BLOCKS S
SEMICOLONS -> SEMICOLON
SEMICOLONS -> SEMICOLON SEMICOLONS
BLOCKS -> BLOCK BLOCKS
BLOCKS -> BLOCK
BLOCK -> BLOCK SEMICOLONS
BLOCK -> IF_BLOCK
BLOCK -> FUNCTION_BLOCK
BLOCK -> WHILE_BLOCK
BLOCK -> SENTENCE SEMICOLONS
BLOCK -> SWITCH_BLOCK
BLOCK -> TRYCATCH_BLOCK
BLOCK -> TRYFINALLY_BLOCK
SENTENCE -> ASSIGNMENT
SENTENCE -> FUNCTION_CALL
ASSIGNMENT -> VARIABLE INC
ASSIGNMENT -> VARIABLE DEC
ASSIGNMENT -> ASSIGNMENT_TERM VARIABLE
ASSIGNMENT -> CONST VARIABLE ASSIGN ASSIGNABLE
ASSIGNMENT -> ASSIGNMENT_TERM VARIABLE ASSIGN_OP ASSIGNABLE
ASSIGNMENT_TERM -> LET
ASSIGNMENT_TERM -> VAR
ASSIGN_OP -> ASSIGN
ASSIGN_OP -> MULEQ
ASSIGN_OP -> PLUSEQ
ASSIGN_OP -> MINEQ
ASSIGN_OP -> DIVEQ
LOGIC_EXPR -> NOT LOGIC_EXPR      
LOGIC_EXPR -> NOT ASSIGNABLE                     
LOGIC_EXPR -> RBRACKETL LOGIC_EXPR LBRACKETR
LOGIC_EXPR -> ASSIGNABLE LOGIC_OP ASSIGNABLE
LOGIC_EXPR -> LOGIC_EXPR LOGIC_OP LOGIC_EXPR
LOGIC_OP -> AND
LOGIC_OP -> OR
LOGIC_OP -> NEQUAL
LOGIC_OP -> STRONGLY_EQUAL
LOGIC_OP -> WEAKLY_EQUAL
LOGIC_OP -> GREATER
LOGIC_OP -> GREATER_EQUAL
LOGIC_OP -> LESS
LOGIC_OP -> LESS_EQUAL
ASSIGNABLE -> ASSIGNABLE ARITH_OP ASSIGNABLE
ARITH_OP -> PLUS
ARITH_OP -> MINUS
ARITH_OP -> DIVIDE
ARITH_OP -> MULTIPLY
ARITH_OP -> MOD
ARITH_OP -> PLUSEQ
ARITH_OP -> MINEQ
ARITH_OP -> MULEQ
ARITH_OP -> DIVEQ
IF_BLOCK -> IF RBRACKETL LOGIC_EXPR RBRACKETR CBRACKETL BLOCKS RBRACKETL
IF_BLOCK ->  IF RBRACKETL LOGIC_EXPR RBRACKETR CBRACKETL BLOCKS RBRACKETL ELSE_BLOCK
IF_BLOCK ->  IF RBRACKETL LOGIC_EXPR RBRACKETR CBRACKETL BLOCKS RBRACKETL ELIF_BLOCKS ELSE_BLOCK
IF_BLOCK ->  IF RBRACKETL LOGIC_EXPR RBRACKETR CBRACKETL BLOCKS RBRACKETL ELIF_BLOCKS 
ELSE_BLOCK -> ELSE CBRACKETL BLOCKS CBRACKETR
ELIF_BLOCKS -> ELIF_BLOCK ELIF_BLOCKS
ELIF_BLOCK -> ELIF CBRACKETL BLOCKS CBRACKETR
CASE_BLOCK -> CASE ASSIGNABLE COLON BLOCKS
CASE_BLOCK -> CASE ASSIGNABLE COLON BLOCKS BREAK SEMICOLON
CASES_BLOCK -> CASES_BLOCK CASE_BLOCK
CASE_DEFAULT -> DEFAULT COLON BLOCKS
CASE_DEFAULT -> DEFAULT COLON BLOCKS BREAK SEMICOLON
SWITCH_BLOCK -> SWITCH RBRACKETL VARIABLE RBRACKETR CBRACKETL CASES_BLOCK CASE_DEFAULT CBRACKETR
SWITCH_BLOCK -> SWITCH RBRACKETL VARIABLE RBRACKETR CBRACKETL CASES_BLOCK CBRACKETR
SWITCH_BLOCK -> SWITCH RBRACKETL VARIABLE RBRACKETR CBRACKETL CASE_DEFAULT CBRACKETR
SWITCH_BLOCK -> SWITCH RBRACKETL VARIABLE RBRACKETR CBRACKETL CBRACKETR
LOOP_SENTENCE -> SENTENCE
LOOP_SENTENCE -> SENTENCE CONTINUE 
LOOP_SENTENCE -> SENTENCE BREAK 
LOOP_SENTENCE -> SENTENCE LOOP_SENTENCE
BLOCKS_LOOP -> BLOCKS
BLOCKS_LOOP -> BLOCK_LOOP BLOCKS_LOOP
BLOCK_LOOP -> LOOP_SENTENCE SEMICOLONS
BLOCK_LOOP -> BLOCK_LOOP SEMICOLONS
BLOCK_LOOP -> IF_BLOCK_LOOP
IF_BLOCK_LOOP -> IF RBRACKETL LOGIC_EXPR RBRACKETR CBRACKETL BLOCKS_LOOP RBRACKETL
IF_BLOCK_LOOP ->  IF RBRACKETL LOGIC_EXPR RBRACKETR CBRACKETL BLOCKS_LOOP RBRACKETL ELSE_BLOCK_LOOP
IF_BLOCK_LOOP ->  IF RBRACKETL LOGIC_EXPR RBRACKETR CBRACKETL BLOCKS_FUNC RBRACKETL ELIF_BLOCKS ELSE_BLOCK_LOOP
IF_BLOCK_LOOP ->  IF RBRACKETL LOGIC_EXPR RBRACKETR CBRACKETL BLOCKS_FUNC RBRACKETL ELIF_BLOCKS_FUNC 
ELSE_BLOCK_LOOP -> ELSE CBRACKETL BLOCKS_LOOP CBRACKETR
ELIF_BLOCKS_LOOP -> ELIF_BLOCK_FUNC ELIF_BLOCKS_FUNC
ELIF_BLOCK_LOOP-> ELIF CBRACKETL BLOCKS_LOOP CBRACKETR
WHILE_BLOCK -> WHILE RBRACKETL LOGIC_EXPR RBRACKETR CBRACKETL BLOCKS_LOOP RBRACKETL
FOR_BLOCK -> FOR RBRACKETL VARIABLE ASSIGN ASSIGNABLE SEMICOLON LOGIC_EXPR SEMICOLON ASSIGNMENT RBRACKETR CBRACKETL BLOCKS_LOOP CBRACKETR
PARAMS_CALL -> ASSIGNABLE
PARAMS_CALL -> PARAMS_CALL COMMA PARAMS_CALL 
PARAMS -> VARIABLE
PARAMS -> PARAMS COMMA PARAMS
FUNCTION_CALL -> VARIABLE RBRACKETL PARAMS_CALL RBRACKETR
FUNCTION_BLOCK -> FUNCTION VARIABLE RBRACKETL PARAMS RBRACKETR CBRACKETL BLOCKS_FUNC CBRACKETR 
FUNC_SENTENCE -> SENTENCE 
FUNC_SENTENCE -> SENTENCE FUNC_SENTENCE
FUNC_SENTENCE -> RETURN ASSIGNABLE 
FUNC_SENTENCE -> FUNC_SENTENCE RETURN ASSIGNABLE 
FUNC_SENTENCE -> THROW  ASSIGNABLE SEMICOLONS
FUNC_SENTENCE -> FUNC_SENTENCE THROW ASSIGNABLE 
BLOCKS_FUNC -> BLOCK_FUNC BLOCKS_FUNC
BLOCK_FUNC -> FUNC_SENTENCE SEMICOLONS
BLOCK_FUNC -> IF_BLOCK_FUNC
BLOCK_FUNC -> BLOCK
BLOCK_FUNC -> BLOCK_FUNC SEMICOLONS
IF_BLOCK_FUNC -> IF RBRACKETL LOGIC_EXPR RBRACKETR CBRACKETL BLOCKS_FUNC RBRACKETL
IF_BLOCK_FUNC ->  IF RBRACKETL LOGIC_EXPR RBRACKETR CBRACKETL BLOCKS_FUNC RBRACKETL ELSE_BLOCK_FUNC
IF_BLOCK_FUNC ->  IF RBRACKETL LOGIC_EXPR RBRACKETR CBRACKETL BLOCKS_FUNC RBRACKETL ELIF_BLOCKS ELSE_BLOCK_FUNC
IF_BLOCK_FUNC ->  IF RBRACKETL LOGIC_EXPR RBRACKETR CBRACKETL BLOCKS_FUNC RBRACKETL ELIF_BLOCKS_FUNC 
ELSE_BLOCK_FUNC -> ELSE CBRACKETL BLOCKS_FUNC CBRACKETR
ELIF_BLOCKS_FUNC -> ELIF_BLOCK_FUNC ELIF_BLOCKS_FUNC
ELIF_BLOCK_FUNC -> ELIF CBRACKETL BLOCKS_FUNC CBRACKETR
TRYCATCH_BLOCK -> TRY_BLOCK CATCH_BLOCK
TRYFINALLY_BLOCK -> TRY_BLOCK FINALLY_BLOCK
TRY_BLOCK -> TRY CBRACKETL BLOCKS CBRACKETR
TRY_BLOCK -> TRY_BLOCK SEMICOLONS
CATCH_BLOCK -> CATCH CBRACKETL BLOCKS CBRACKETR
CATCH_BLOCK -> CATCH_BLOCK SEMICOLONS
FINALLY_BLOCK -> FINALLY CBRACKETL BLOCKS CBRACKETR
FINALLY_BLOCK -> FINALLY_BLOCK SEMICOLONS
