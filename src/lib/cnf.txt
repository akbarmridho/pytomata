BREAK -> break 
CONST -> const 
CASE -> case 
CATCH -> catch 
CONTINUE -> continue 
DEFAULT -> default 
DELETE -> delete 
ELSE -> else 
FALSE -> false 
FINALLY -> finally 
FOR -> for 
FUNCTION -> function 
IF -> if 
ELSEIF -> elif 
LET -> let 
NULL -> null 
RETURN -> return 
SWITCH -> switch 
THROW -> throw 
WHILE -> while 
VAR -> var 
TRUE -> true 
TRY -> try 
VARIABLE -> variable 
CBRACKETL -> cbracketl 
CBRACKETR -> cbracketr 
RBRACKETL -> rbracketl 
RBRACKETR -> rbracketr 
SBRACKETL -> sbracketl 
SBRACKETR -> sbracketr 
NEWLINE -> nl 
SEMICOLON -> semicolon 
COLON -> colon 
STRING -> string 
NUMBER -> number 
PLUS -> plus 
PLUSEQ -> pluseq 
MINUS -> minus 
MINEQ -> mineq 
DIVIDE -> divide 
DIVEQ -> divq 
MULTIPLY -> multiply 
MULEQ -> muleq 
MOD -> mod 
INC -> inc 
DEC -> dec 
COMMA -> comma 
ASSIGN -> assign 
GREATER -> greater 
GREATER_EQUAL -> egreater 
NEQUAL -> nequal 
NOT -> not 
LESS -> less 
LESS_EQUAL -> lequal 
STRONGLY_EQUAL -> sequal 
WEAKLY_EQUAL -> wequal 
STRONGLY_NEQUAL -> snequal 
WEAKLY_NEQUAL -> wnequal 
AND -> and 
OR -> or 
ASSIGNABLE0 -> RBRACKETL ASSIGNABLE 
ASSIGNABLE -> ASSIGNABLE0 RBRACKETR 
ASSIGNABLE -> ASSIGNABLE2 SBRACKETR 
ASSIGNABLE -> ASSIGNABLE3 ASSIGNABLE 
ASSIGNABLE -> null 
ASSIGNABLE -> number 
ASSIGNABLE -> NOT LOGIC_EXPR 
ASSIGNABLE -> NOT ASSIGNABLE 
ASSIGNABLE -> ASSIGNABLE4 LBRACKETR 
ASSIGNABLE -> ASSIGNABLE5 ASSIGNABLE 
ASSIGNABLE -> ASSIGNABLE6 LOGIC_EXPR 
ASSIGNABLE -> SBRACKETL SBRACKETR 
ASSIGNABLE -> ASSIGNABLE7 SBRACKETSR 
ASSIGNABLE -> true 
ASSIGNABLE -> variable 
ASSIGNABLE -> false 
ASSIGNABLE -> string 
ASSIGNABLE1 -> VARIABLE SBRACKETL 
ASSIGNABLE2 -> ASSIGNABLE1 ASSIGNABLE 
ASSIGNABLE3 -> ASSIGNABLE ARITH_OP 
ASSIGNABLE4 -> RBRACKETL LOGIC_EXPR 
ASSIGNABLE5 -> ASSIGNABLE LOGIC_OP 
ASSIGNABLE6 -> LOGIC_EXPR LOGIC_OP 
ASSIGNABLE7 -> SBRACKETL ARR_ELS 
LOGIC_EXPR -> NOT LOGIC_EXPR 
LOGIC_EXPR -> NOT ASSIGNABLE 
LOGIC_EXPR -> LOGIC_EXPR0 LBRACKETR 
LOGIC_EXPR -> LOGIC_EXPR1 ASSIGNABLE 
LOGIC_EXPR -> LOGIC_EXPR2 LOGIC_EXPR 
LOGIC_EXPR -> true 
LOGIC_EXPR -> false 
LOGIC_EXPR0 -> RBRACKETL LOGIC_EXPR 
LOGIC_EXPR1 -> ASSIGNABLE LOGIC_OP 
LOGIC_EXPR2 -> LOGIC_EXPR LOGIC_OP 
ARRAY -> SBRACKETL SBRACKETR 
ARRAY -> ARRAY0 SBRACKETSR 
ARRAY0 -> SBRACKETL ARR_ELS 
ARR_ELS0 -> ARR_ELS COMMA 
ARR_ELS -> ARR_ELS0 ARR_ELS 
ARR_ELS -> ARR_ELS1 RBRACKETR 
ARR_ELS -> ARR_ELS3 SBRACKETR 
ARR_ELS -> ARR_ELS4 ASSIGNABLE 
ARR_ELS -> null 
ARR_ELS -> number 
ARR_ELS -> NOT LOGIC_EXPR 
ARR_ELS -> NOT ASSIGNABLE 
ARR_ELS -> ARR_ELS5 LBRACKETR 
ARR_ELS -> ARR_ELS6 ASSIGNABLE 
ARR_ELS -> ARR_ELS7 LOGIC_EXPR 
ARR_ELS -> SBRACKETL SBRACKETR 
ARR_ELS -> ARR_ELS8 SBRACKETSR 
ARR_ELS -> true 
ARR_ELS -> variable 
ARR_ELS -> false 
ARR_ELS -> string 
ARR_ELS1 -> RBRACKETL ASSIGNABLE 
ARR_ELS2 -> VARIABLE SBRACKETL 
ARR_ELS3 -> ARR_ELS2 ASSIGNABLE 
ARR_ELS4 -> ASSIGNABLE ARITH_OP 
ARR_ELS5 -> RBRACKETL LOGIC_EXPR 
ARR_ELS6 -> ASSIGNABLE LOGIC_OP 
ARR_ELS7 -> LOGIC_EXPR LOGIC_OP 
ARR_ELS8 -> SBRACKETL ARR_ELS 
S -> NEWLINE S 
S -> S NEWLINE 
S -> BLOCKS S 
S -> nl 
SEMICOLONS -> SEMICOLON SEMICOLONS 
SEMICOLONS -> semicolon 
BLOCKS -> BLOCK BLOCKS 
BLOCKS -> BLOCK SEMICOLONS 
BLOCKS -> SENTENCE SEMICOLONS 
BLOCKS -> BLOCKS4 RBRACKETL 
BLOCKS -> BLOCKS10 ELSE_BLOCK 
BLOCKS -> BLOCKS17 ELSE_BLOCK 
BLOCKS -> BLOCKS23 ELIF_BLOCKS 
BLOCKS -> BLOCKS28 RBRACKETL 
BLOCKS -> BLOCKS34 CBRACKETR 
BLOCKS -> BLOCKS39 CBRACKETR 
BLOCKS -> BLOCKS44 CBRACKETR 
BLOCKS -> BLOCKS48 CBRACKETR 
BLOCKS -> TRY_BLOCK FINALLY_BLOCK 
BLOCKS -> BLOCKS54 CBRACKETR 
BLOCKS -> TRY_BLOCK CATCH_BLOCK 
BLOCKS0 -> IF RBRACKETL 
BLOCKS1 -> BLOCKS0 LOGIC_EXPR 
BLOCKS2 -> BLOCKS1 RBRACKETR 
BLOCKS3 -> BLOCKS2 CBRACKETL 
BLOCKS4 -> BLOCKS3 BLOCKS 
BLOCKS5 -> IF RBRACKETL 
BLOCKS6 -> BLOCKS5 LOGIC_EXPR 
BLOCKS7 -> BLOCKS6 RBRACKETR 
BLOCKS8 -> BLOCKS7 CBRACKETL 
BLOCKS9 -> BLOCKS8 BLOCKS 
BLOCKS10 -> BLOCKS9 RBRACKETL 
BLOCKS11 -> IF RBRACKETL 
BLOCKS12 -> BLOCKS11 LOGIC_EXPR 
BLOCKS13 -> BLOCKS12 RBRACKETR 
BLOCKS14 -> BLOCKS13 CBRACKETL 
BLOCKS15 -> BLOCKS14 BLOCKS 
BLOCKS16 -> BLOCKS15 RBRACKETL 
BLOCKS17 -> BLOCKS16 ELIF_BLOCKS 
BLOCKS18 -> IF RBRACKETL 
BLOCKS19 -> BLOCKS18 LOGIC_EXPR 
BLOCKS20 -> BLOCKS19 RBRACKETR 
BLOCKS21 -> BLOCKS20 CBRACKETL 
BLOCKS22 -> BLOCKS21 BLOCKS 
BLOCKS23 -> BLOCKS22 RBRACKETL 
BLOCKS24 -> WHILE RBRACKETL 
BLOCKS25 -> BLOCKS24 LOGIC_EXPR 
BLOCKS26 -> BLOCKS25 RBRACKETR 
BLOCKS27 -> BLOCKS26 CBRACKETL 
BLOCKS28 -> BLOCKS27 BLOCKS_LOOP 
BLOCKS29 -> SWITCH RBRACKETL 
BLOCKS30 -> BLOCKS29 VARIABLE 
BLOCKS31 -> BLOCKS30 RBRACKETR 
BLOCKS32 -> BLOCKS31 CBRACKETL 
BLOCKS33 -> BLOCKS32 CASES_BLOCK 
BLOCKS34 -> BLOCKS33 CASE_DEFAULT 
BLOCKS35 -> SWITCH RBRACKETL 
BLOCKS36 -> BLOCKS35 VARIABLE 
BLOCKS37 -> BLOCKS36 RBRACKETR 
BLOCKS38 -> BLOCKS37 CBRACKETL 
BLOCKS39 -> BLOCKS38 CASES_BLOCK 
BLOCKS40 -> SWITCH RBRACKETL 
BLOCKS41 -> BLOCKS40 VARIABLE 
BLOCKS42 -> BLOCKS41 RBRACKETR 
BLOCKS43 -> BLOCKS42 CBRACKETL 
BLOCKS44 -> BLOCKS43 CASE_DEFAULT 
BLOCKS45 -> SWITCH RBRACKETL 
BLOCKS46 -> BLOCKS45 VARIABLE 
BLOCKS47 -> BLOCKS46 RBRACKETR 
BLOCKS48 -> BLOCKS47 CBRACKETL 
BLOCKS49 -> FUNCTION VARIABLE 
BLOCKS50 -> BLOCKS49 RBRACKETL 
BLOCKS51 -> BLOCKS50 PARAMS 
BLOCKS52 -> BLOCKS51 RBRACKETR 
BLOCKS53 -> BLOCKS52 CBRACKETL 
BLOCKS54 -> BLOCKS53 BLOCKS_FUNC 
BLOCK -> BLOCK SEMICOLONS 
BLOCK -> SENTENCE SEMICOLONS 
BLOCK -> BLOCK4 RBRACKETL 
BLOCK -> BLOCK10 ELSE_BLOCK 
BLOCK -> BLOCK17 ELSE_BLOCK 
BLOCK -> BLOCK23 ELIF_BLOCKS 
BLOCK -> BLOCK28 RBRACKETL 
BLOCK -> BLOCK34 CBRACKETR 
BLOCK -> BLOCK39 CBRACKETR 
BLOCK -> BLOCK44 CBRACKETR 
BLOCK -> BLOCK48 CBRACKETR 
BLOCK -> TRY_BLOCK FINALLY_BLOCK 
BLOCK -> BLOCK54 CBRACKETR 
BLOCK -> TRY_BLOCK CATCH_BLOCK 
BLOCK0 -> IF RBRACKETL 
BLOCK1 -> BLOCK0 LOGIC_EXPR 
BLOCK2 -> BLOCK1 RBRACKETR 
BLOCK3 -> BLOCK2 CBRACKETL 
BLOCK4 -> BLOCK3 BLOCKS 
BLOCK5 -> IF RBRACKETL 
BLOCK6 -> BLOCK5 LOGIC_EXPR 
BLOCK7 -> BLOCK6 RBRACKETR 
BLOCK8 -> BLOCK7 CBRACKETL 
BLOCK9 -> BLOCK8 BLOCKS 
BLOCK10 -> BLOCK9 RBRACKETL 
BLOCK11 -> IF RBRACKETL 
BLOCK12 -> BLOCK11 LOGIC_EXPR 
BLOCK13 -> BLOCK12 RBRACKETR 
BLOCK14 -> BLOCK13 CBRACKETL 
BLOCK15 -> BLOCK14 BLOCKS 
BLOCK16 -> BLOCK15 RBRACKETL 
BLOCK17 -> BLOCK16 ELIF_BLOCKS 
BLOCK18 -> IF RBRACKETL 
BLOCK19 -> BLOCK18 LOGIC_EXPR 
BLOCK20 -> BLOCK19 RBRACKETR 
BLOCK21 -> BLOCK20 CBRACKETL 
BLOCK22 -> BLOCK21 BLOCKS 
BLOCK23 -> BLOCK22 RBRACKETL 
BLOCK24 -> WHILE RBRACKETL 
BLOCK25 -> BLOCK24 LOGIC_EXPR 
BLOCK26 -> BLOCK25 RBRACKETR 
BLOCK27 -> BLOCK26 CBRACKETL 
BLOCK28 -> BLOCK27 BLOCKS_LOOP 
BLOCK29 -> SWITCH RBRACKETL 
BLOCK30 -> BLOCK29 VARIABLE 
BLOCK31 -> BLOCK30 RBRACKETR 
BLOCK32 -> BLOCK31 CBRACKETL 
BLOCK33 -> BLOCK32 CASES_BLOCK 
BLOCK34 -> BLOCK33 CASE_DEFAULT 
BLOCK35 -> SWITCH RBRACKETL 
BLOCK36 -> BLOCK35 VARIABLE 
BLOCK37 -> BLOCK36 RBRACKETR 
BLOCK38 -> BLOCK37 CBRACKETL 
BLOCK39 -> BLOCK38 CASES_BLOCK 
BLOCK40 -> SWITCH RBRACKETL 
BLOCK41 -> BLOCK40 VARIABLE 
BLOCK42 -> BLOCK41 RBRACKETR 
BLOCK43 -> BLOCK42 CBRACKETL 
BLOCK44 -> BLOCK43 CASE_DEFAULT 
BLOCK45 -> SWITCH RBRACKETL 
BLOCK46 -> BLOCK45 VARIABLE 
BLOCK47 -> BLOCK46 RBRACKETR 
BLOCK48 -> BLOCK47 CBRACKETL 
BLOCK49 -> FUNCTION VARIABLE 
BLOCK50 -> BLOCK49 RBRACKETL 
BLOCK51 -> BLOCK50 PARAMS 
BLOCK52 -> BLOCK51 RBRACKETR 
BLOCK53 -> BLOCK52 CBRACKETL 
BLOCK54 -> BLOCK53 BLOCKS_FUNC 
SENTENCE -> VARIABLE INC 
SENTENCE -> VARIABLE DEC 
SENTENCE -> ASSIGNMENT_TERM VARIABLE 
SENTENCE -> SENTENCE1 ASSIGNABLE 
SENTENCE -> SENTENCE3 ASSIGNABLE 
SENTENCE -> SENTENCE5 RBRACKETR 
SENTENCE0 -> CONST VARIABLE 
SENTENCE1 -> SENTENCE0 ASSIGN 
SENTENCE2 -> ASSIGNMENT_TERM VARIABLE 
SENTENCE3 -> SENTENCE2 ASSIGN_OP 
SENTENCE4 -> VARIABLE RBRACKETL 
SENTENCE5 -> SENTENCE4 PARAMS_CALL 
ASSIGNMENT -> VARIABLE INC 
ASSIGNMENT -> VARIABLE DEC 
ASSIGNMENT -> ASSIGNMENT_TERM VARIABLE 
ASSIGNMENT -> ASSIGNMENT1 ASSIGNABLE 
ASSIGNMENT -> ASSIGNMENT3 ASSIGNABLE 
ASSIGNMENT0 -> CONST VARIABLE 
ASSIGNMENT1 -> ASSIGNMENT0 ASSIGN 
ASSIGNMENT2 -> ASSIGNMENT_TERM VARIABLE 
ASSIGNMENT3 -> ASSIGNMENT2 ASSIGN_OP 
ASSIGNMENT_TERM -> let 
ASSIGNMENT_TERM -> var 
ASSIGN_OP -> assign 
ASSIGN_OP -> pluseq 
ASSIGN_OP -> divq 
ASSIGN_OP -> muleq 
ASSIGN_OP -> mineq 
LOGIC_OP -> and 
LOGIC_OP -> nequal 
LOGIC_OP -> wequal 
LOGIC_OP -> egreater 
LOGIC_OP -> lequal 
LOGIC_OP -> or 
LOGIC_OP -> greater 
LOGIC_OP -> sequal 
LOGIC_OP -> less 
ARITH_OP -> plus 
ARITH_OP -> divide 
ARITH_OP -> mod 
ARITH_OP -> mineq 
ARITH_OP -> divq 
ARITH_OP -> minus 
ARITH_OP -> pluseq 
ARITH_OP -> multiply 
ARITH_OP -> muleq 
IF_BLOCK0 -> IF RBRACKETL 
IF_BLOCK1 -> IF_BLOCK0 LOGIC_EXPR 
IF_BLOCK2 -> IF_BLOCK1 RBRACKETR 
IF_BLOCK3 -> IF_BLOCK2 CBRACKETL 
IF_BLOCK4 -> IF_BLOCK3 BLOCKS 
IF_BLOCK -> IF_BLOCK4 RBRACKETL 
IF_BLOCK -> IF_BLOCK10 ELSE_BLOCK 
IF_BLOCK -> IF_BLOCK17 ELSE_BLOCK 
IF_BLOCK -> IF_BLOCK23 ELIF_BLOCKS 
IF_BLOCK5 -> IF RBRACKETL 
IF_BLOCK6 -> IF_BLOCK5 LOGIC_EXPR 
IF_BLOCK7 -> IF_BLOCK6 RBRACKETR 
IF_BLOCK8 -> IF_BLOCK7 CBRACKETL 
IF_BLOCK9 -> IF_BLOCK8 BLOCKS 
IF_BLOCK10 -> IF_BLOCK9 RBRACKETL 
IF_BLOCK11 -> IF RBRACKETL 
IF_BLOCK12 -> IF_BLOCK11 LOGIC_EXPR 
IF_BLOCK13 -> IF_BLOCK12 RBRACKETR 
IF_BLOCK14 -> IF_BLOCK13 CBRACKETL 
IF_BLOCK15 -> IF_BLOCK14 BLOCKS 
IF_BLOCK16 -> IF_BLOCK15 RBRACKETL 
IF_BLOCK17 -> IF_BLOCK16 ELIF_BLOCKS 
IF_BLOCK18 -> IF RBRACKETL 
IF_BLOCK19 -> IF_BLOCK18 LOGIC_EXPR 
IF_BLOCK20 -> IF_BLOCK19 RBRACKETR 
IF_BLOCK21 -> IF_BLOCK20 CBRACKETL 
IF_BLOCK22 -> IF_BLOCK21 BLOCKS 
IF_BLOCK23 -> IF_BLOCK22 RBRACKETL 
ELSE_BLOCK0 -> ELSE CBRACKETL 
ELSE_BLOCK1 -> ELSE_BLOCK0 BLOCKS 
ELSE_BLOCK -> ELSE_BLOCK1 CBRACKETR 
ELIF_BLOCKS -> ELIF_BLOCK ELIF_BLOCKS 
ELIF_BLOCK0 -> ELIF CBRACKETL 
ELIF_BLOCK1 -> ELIF_BLOCK0 BLOCKS 
ELIF_BLOCK -> ELIF_BLOCK1 CBRACKETR 
CASE_BLOCK0 -> CASE ASSIGNABLE 
CASE_BLOCK1 -> CASE_BLOCK0 COLON 
CASE_BLOCK -> CASE_BLOCK1 BLOCKS 
CASE_BLOCK -> CASE_BLOCK5 SEMICOLON 
CASE_BLOCK2 -> CASE ASSIGNABLE 
CASE_BLOCK3 -> CASE_BLOCK2 COLON 
CASE_BLOCK4 -> CASE_BLOCK3 BLOCKS 
CASE_BLOCK5 -> CASE_BLOCK4 BREAK 
CASES_BLOCK -> CASES_BLOCK CASE_BLOCK 
CASE_DEFAULT0 -> DEFAULT COLON 
CASE_DEFAULT -> CASE_DEFAULT0 BLOCKS 
CASE_DEFAULT -> CASE_DEFAULT3 SEMICOLON 
CASE_DEFAULT1 -> DEFAULT COLON 
CASE_DEFAULT2 -> CASE_DEFAULT1 BLOCKS 
CASE_DEFAULT3 -> CASE_DEFAULT2 BREAK 
SWITCH_BLOCK0 -> SWITCH RBRACKETL 
SWITCH_BLOCK1 -> SWITCH_BLOCK0 VARIABLE 
SWITCH_BLOCK2 -> SWITCH_BLOCK1 RBRACKETR 
SWITCH_BLOCK3 -> SWITCH_BLOCK2 CBRACKETL 
SWITCH_BLOCK4 -> SWITCH_BLOCK3 CASES_BLOCK 
SWITCH_BLOCK5 -> SWITCH_BLOCK4 CASE_DEFAULT 
SWITCH_BLOCK -> SWITCH_BLOCK5 CBRACKETR 
SWITCH_BLOCK -> SWITCH_BLOCK10 CBRACKETR 
SWITCH_BLOCK -> SWITCH_BLOCK15 CBRACKETR 
SWITCH_BLOCK -> SWITCH_BLOCK19 CBRACKETR 
SWITCH_BLOCK6 -> SWITCH RBRACKETL 
SWITCH_BLOCK7 -> SWITCH_BLOCK6 VARIABLE 
SWITCH_BLOCK8 -> SWITCH_BLOCK7 RBRACKETR 
SWITCH_BLOCK9 -> SWITCH_BLOCK8 CBRACKETL 
SWITCH_BLOCK10 -> SWITCH_BLOCK9 CASES_BLOCK 
SWITCH_BLOCK11 -> SWITCH RBRACKETL 
SWITCH_BLOCK12 -> SWITCH_BLOCK11 VARIABLE 
SWITCH_BLOCK13 -> SWITCH_BLOCK12 RBRACKETR 
SWITCH_BLOCK14 -> SWITCH_BLOCK13 CBRACKETL 
SWITCH_BLOCK15 -> SWITCH_BLOCK14 CASE_DEFAULT 
SWITCH_BLOCK16 -> SWITCH RBRACKETL 
SWITCH_BLOCK17 -> SWITCH_BLOCK16 VARIABLE 
SWITCH_BLOCK18 -> SWITCH_BLOCK17 RBRACKETR 
SWITCH_BLOCK19 -> SWITCH_BLOCK18 CBRACKETL 
LOOP_SENTENCE -> SENTENCE CONTINUE 
LOOP_SENTENCE -> SENTENCE BREAK 
LOOP_SENTENCE -> SENTENCE LOOP_SENTENCE 
LOOP_SENTENCE -> VARIABLE INC 
LOOP_SENTENCE -> VARIABLE DEC 
LOOP_SENTENCE -> ASSIGNMENT_TERM VARIABLE 
LOOP_SENTENCE -> LOOP_SENTENCE1 ASSIGNABLE 
LOOP_SENTENCE -> LOOP_SENTENCE3 ASSIGNABLE 
LOOP_SENTENCE -> LOOP_SENTENCE5 RBRACKETR 
LOOP_SENTENCE0 -> CONST VARIABLE 
LOOP_SENTENCE1 -> LOOP_SENTENCE0 ASSIGN 
LOOP_SENTENCE2 -> ASSIGNMENT_TERM VARIABLE 
LOOP_SENTENCE3 -> LOOP_SENTENCE2 ASSIGN_OP 
LOOP_SENTENCE4 -> VARIABLE RBRACKETL 
LOOP_SENTENCE5 -> LOOP_SENTENCE4 PARAMS_CALL 
BLOCKS_LOOP -> BLOCK_LOOP BLOCKS_LOOP 
BLOCKS_LOOP -> BLOCK BLOCKS 
BLOCKS_LOOP -> BLOCK SEMICOLONS 
BLOCKS_LOOP -> SENTENCE SEMICOLONS 
BLOCKS_LOOP -> BLOCKS_LOOP4 RBRACKETL 
BLOCKS_LOOP -> BLOCKS_LOOP10 ELSE_BLOCK 
BLOCKS_LOOP -> BLOCKS_LOOP17 ELSE_BLOCK 
BLOCKS_LOOP -> BLOCKS_LOOP23 ELIF_BLOCKS 
BLOCKS_LOOP -> BLOCKS_LOOP28 RBRACKETL 
BLOCKS_LOOP -> BLOCKS_LOOP34 CBRACKETR 
BLOCKS_LOOP -> BLOCKS_LOOP39 CBRACKETR 
BLOCKS_LOOP -> BLOCKS_LOOP44 CBRACKETR 
BLOCKS_LOOP -> BLOCKS_LOOP48 CBRACKETR 
BLOCKS_LOOP -> TRY_BLOCK FINALLY_BLOCK 
BLOCKS_LOOP -> BLOCKS_LOOP54 CBRACKETR 
BLOCKS_LOOP -> TRY_BLOCK CATCH_BLOCK 
BLOCKS_LOOP0 -> IF RBRACKETL 
BLOCKS_LOOP1 -> BLOCKS_LOOP0 LOGIC_EXPR 
BLOCKS_LOOP2 -> BLOCKS_LOOP1 RBRACKETR 
BLOCKS_LOOP3 -> BLOCKS_LOOP2 CBRACKETL 
BLOCKS_LOOP4 -> BLOCKS_LOOP3 BLOCKS 
BLOCKS_LOOP5 -> IF RBRACKETL 
BLOCKS_LOOP6 -> BLOCKS_LOOP5 LOGIC_EXPR 
BLOCKS_LOOP7 -> BLOCKS_LOOP6 RBRACKETR 
BLOCKS_LOOP8 -> BLOCKS_LOOP7 CBRACKETL 
BLOCKS_LOOP9 -> BLOCKS_LOOP8 BLOCKS 
BLOCKS_LOOP10 -> BLOCKS_LOOP9 RBRACKETL 
BLOCKS_LOOP11 -> IF RBRACKETL 
BLOCKS_LOOP12 -> BLOCKS_LOOP11 LOGIC_EXPR 
BLOCKS_LOOP13 -> BLOCKS_LOOP12 RBRACKETR 
BLOCKS_LOOP14 -> BLOCKS_LOOP13 CBRACKETL 
BLOCKS_LOOP15 -> BLOCKS_LOOP14 BLOCKS 
BLOCKS_LOOP16 -> BLOCKS_LOOP15 RBRACKETL 
BLOCKS_LOOP17 -> BLOCKS_LOOP16 ELIF_BLOCKS 
BLOCKS_LOOP18 -> IF RBRACKETL 
BLOCKS_LOOP19 -> BLOCKS_LOOP18 LOGIC_EXPR 
BLOCKS_LOOP20 -> BLOCKS_LOOP19 RBRACKETR 
BLOCKS_LOOP21 -> BLOCKS_LOOP20 CBRACKETL 
BLOCKS_LOOP22 -> BLOCKS_LOOP21 BLOCKS 
BLOCKS_LOOP23 -> BLOCKS_LOOP22 RBRACKETL 
BLOCKS_LOOP24 -> WHILE RBRACKETL 
BLOCKS_LOOP25 -> BLOCKS_LOOP24 LOGIC_EXPR 
BLOCKS_LOOP26 -> BLOCKS_LOOP25 RBRACKETR 
BLOCKS_LOOP27 -> BLOCKS_LOOP26 CBRACKETL 
BLOCKS_LOOP28 -> BLOCKS_LOOP27 BLOCKS_LOOP 
BLOCKS_LOOP29 -> SWITCH RBRACKETL 
BLOCKS_LOOP30 -> BLOCKS_LOOP29 VARIABLE 
BLOCKS_LOOP31 -> BLOCKS_LOOP30 RBRACKETR 
BLOCKS_LOOP32 -> BLOCKS_LOOP31 CBRACKETL 
BLOCKS_LOOP33 -> BLOCKS_LOOP32 CASES_BLOCK 
BLOCKS_LOOP34 -> BLOCKS_LOOP33 CASE_DEFAULT 
BLOCKS_LOOP35 -> SWITCH RBRACKETL 
BLOCKS_LOOP36 -> BLOCKS_LOOP35 VARIABLE 
BLOCKS_LOOP37 -> BLOCKS_LOOP36 RBRACKETR 
BLOCKS_LOOP38 -> BLOCKS_LOOP37 CBRACKETL 
BLOCKS_LOOP39 -> BLOCKS_LOOP38 CASES_BLOCK 
BLOCKS_LOOP40 -> SWITCH RBRACKETL 
BLOCKS_LOOP41 -> BLOCKS_LOOP40 VARIABLE 
BLOCKS_LOOP42 -> BLOCKS_LOOP41 RBRACKETR 
BLOCKS_LOOP43 -> BLOCKS_LOOP42 CBRACKETL 
BLOCKS_LOOP44 -> BLOCKS_LOOP43 CASE_DEFAULT 
BLOCKS_LOOP45 -> SWITCH RBRACKETL 
BLOCKS_LOOP46 -> BLOCKS_LOOP45 VARIABLE 
BLOCKS_LOOP47 -> BLOCKS_LOOP46 RBRACKETR 
BLOCKS_LOOP48 -> BLOCKS_LOOP47 CBRACKETL 
BLOCKS_LOOP49 -> FUNCTION VARIABLE 
BLOCKS_LOOP50 -> BLOCKS_LOOP49 RBRACKETL 
BLOCKS_LOOP51 -> BLOCKS_LOOP50 PARAMS 
BLOCKS_LOOP52 -> BLOCKS_LOOP51 RBRACKETR 
BLOCKS_LOOP53 -> BLOCKS_LOOP52 CBRACKETL 
BLOCKS_LOOP54 -> BLOCKS_LOOP53 BLOCKS_FUNC 
BLOCK_LOOP -> LOOP_SENTENCE SEMICOLONS 
BLOCK_LOOP -> BLOCK_LOOP SEMICOLONS 
BLOCK_LOOP -> BLOCK_LOOP4 RBRACKETL 
BLOCK_LOOP -> BLOCK_LOOP10 ELSE_BLOCK_LOOP 
BLOCK_LOOP -> BLOCK_LOOP17 ELSE_BLOCK_LOOP 
BLOCK_LOOP -> BLOCK_LOOP23 ELIF_BLOCKS_FUNC 
BLOCK_LOOP0 -> IF RBRACKETL 
BLOCK_LOOP1 -> BLOCK_LOOP0 LOGIC_EXPR 
BLOCK_LOOP2 -> BLOCK_LOOP1 RBRACKETR 
BLOCK_LOOP3 -> BLOCK_LOOP2 CBRACKETL 
BLOCK_LOOP4 -> BLOCK_LOOP3 BLOCKS_LOOP 
BLOCK_LOOP5 -> IF RBRACKETL 
BLOCK_LOOP6 -> BLOCK_LOOP5 LOGIC_EXPR 
BLOCK_LOOP7 -> BLOCK_LOOP6 RBRACKETR 
BLOCK_LOOP8 -> BLOCK_LOOP7 CBRACKETL 
BLOCK_LOOP9 -> BLOCK_LOOP8 BLOCKS_LOOP 
BLOCK_LOOP10 -> BLOCK_LOOP9 RBRACKETL 
BLOCK_LOOP11 -> IF RBRACKETL 
BLOCK_LOOP12 -> BLOCK_LOOP11 LOGIC_EXPR 
BLOCK_LOOP13 -> BLOCK_LOOP12 RBRACKETR 
BLOCK_LOOP14 -> BLOCK_LOOP13 CBRACKETL 
BLOCK_LOOP15 -> BLOCK_LOOP14 BLOCKS_FUNC 
BLOCK_LOOP16 -> BLOCK_LOOP15 RBRACKETL 
BLOCK_LOOP17 -> BLOCK_LOOP16 ELIF_BLOCKS 
BLOCK_LOOP18 -> IF RBRACKETL 
BLOCK_LOOP19 -> BLOCK_LOOP18 LOGIC_EXPR 
BLOCK_LOOP20 -> BLOCK_LOOP19 RBRACKETR 
BLOCK_LOOP21 -> BLOCK_LOOP20 CBRACKETL 
BLOCK_LOOP22 -> BLOCK_LOOP21 BLOCKS_FUNC 
BLOCK_LOOP23 -> BLOCK_LOOP22 RBRACKETL 
IF_BLOCK_LOOP0 -> IF RBRACKETL 
IF_BLOCK_LOOP1 -> IF_BLOCK_LOOP0 LOGIC_EXPR 
IF_BLOCK_LOOP2 -> IF_BLOCK_LOOP1 RBRACKETR 
IF_BLOCK_LOOP3 -> IF_BLOCK_LOOP2 CBRACKETL 
IF_BLOCK_LOOP4 -> IF_BLOCK_LOOP3 BLOCKS_LOOP 
IF_BLOCK_LOOP -> IF_BLOCK_LOOP4 RBRACKETL 
IF_BLOCK_LOOP -> IF_BLOCK_LOOP10 ELSE_BLOCK_LOOP 
IF_BLOCK_LOOP -> IF_BLOCK_LOOP17 ELSE_BLOCK_LOOP 
IF_BLOCK_LOOP -> IF_BLOCK_LOOP23 ELIF_BLOCKS_FUNC 
IF_BLOCK_LOOP5 -> IF RBRACKETL 
IF_BLOCK_LOOP6 -> IF_BLOCK_LOOP5 LOGIC_EXPR 
IF_BLOCK_LOOP7 -> IF_BLOCK_LOOP6 RBRACKETR 
IF_BLOCK_LOOP8 -> IF_BLOCK_LOOP7 CBRACKETL 
IF_BLOCK_LOOP9 -> IF_BLOCK_LOOP8 BLOCKS_LOOP 
IF_BLOCK_LOOP10 -> IF_BLOCK_LOOP9 RBRACKETL 
IF_BLOCK_LOOP11 -> IF RBRACKETL 
IF_BLOCK_LOOP12 -> IF_BLOCK_LOOP11 LOGIC_EXPR 
IF_BLOCK_LOOP13 -> IF_BLOCK_LOOP12 RBRACKETR 
IF_BLOCK_LOOP14 -> IF_BLOCK_LOOP13 CBRACKETL 
IF_BLOCK_LOOP15 -> IF_BLOCK_LOOP14 BLOCKS_FUNC 
IF_BLOCK_LOOP16 -> IF_BLOCK_LOOP15 RBRACKETL 
IF_BLOCK_LOOP17 -> IF_BLOCK_LOOP16 ELIF_BLOCKS 
IF_BLOCK_LOOP18 -> IF RBRACKETL 
IF_BLOCK_LOOP19 -> IF_BLOCK_LOOP18 LOGIC_EXPR 
IF_BLOCK_LOOP20 -> IF_BLOCK_LOOP19 RBRACKETR 
IF_BLOCK_LOOP21 -> IF_BLOCK_LOOP20 CBRACKETL 
IF_BLOCK_LOOP22 -> IF_BLOCK_LOOP21 BLOCKS_FUNC 
IF_BLOCK_LOOP23 -> IF_BLOCK_LOOP22 RBRACKETL 
ELSE_BLOCK_LOOP0 -> ELSE CBRACKETL 
ELSE_BLOCK_LOOP1 -> ELSE_BLOCK_LOOP0 BLOCKS_LOOP 
ELSE_BLOCK_LOOP -> ELSE_BLOCK_LOOP1 CBRACKETR 
ELIF_BLOCKS_LOOP -> ELIF_BLOCK_FUNC ELIF_BLOCKS_FUNC 
ELIF_BLOCK_LOOP0 -> ELIF CBRACKETL 
ELIF_BLOCK_LOOP1 -> ELIF_BLOCK_LOOP0 BLOCKS_LOOP 
ELIF_BLOCK_LOOP -> ELIF_BLOCK_LOOP1 CBRACKETR 
WHILE_BLOCK0 -> WHILE RBRACKETL 
WHILE_BLOCK1 -> WHILE_BLOCK0 LOGIC_EXPR 
WHILE_BLOCK2 -> WHILE_BLOCK1 RBRACKETR 
WHILE_BLOCK3 -> WHILE_BLOCK2 CBRACKETL 
WHILE_BLOCK4 -> WHILE_BLOCK3 BLOCKS_LOOP 
WHILE_BLOCK -> WHILE_BLOCK4 RBRACKETL 
FOR_BLOCK0 -> FOR RBRACKETL 
FOR_BLOCK1 -> FOR_BLOCK0 VARIABLE 
FOR_BLOCK2 -> FOR_BLOCK1 ASSIGN 
FOR_BLOCK3 -> FOR_BLOCK2 ASSIGNABLE 
FOR_BLOCK4 -> FOR_BLOCK3 SEMICOLON 
FOR_BLOCK5 -> FOR_BLOCK4 LOGIC_EXPR 
FOR_BLOCK6 -> FOR_BLOCK5 SEMICOLON 
FOR_BLOCK7 -> FOR_BLOCK6 ASSIGNMENT 
FOR_BLOCK8 -> FOR_BLOCK7 RBRACKETR 
FOR_BLOCK9 -> FOR_BLOCK8 CBRACKETL 
FOR_BLOCK10 -> FOR_BLOCK9 BLOCKS_LOOP 
FOR_BLOCK -> FOR_BLOCK10 CBRACKETR 
PARAMS_CALL0 -> PARAMS_CALL COMMA 
PARAMS_CALL -> PARAMS_CALL0 PARAMS_CALL 
PARAMS_CALL -> PARAMS_CALL1 RBRACKETR 
PARAMS_CALL -> PARAMS_CALL3 SBRACKETR 
PARAMS_CALL -> PARAMS_CALL4 ASSIGNABLE 
PARAMS_CALL -> null 
PARAMS_CALL -> number 
PARAMS_CALL -> NOT LOGIC_EXPR 
PARAMS_CALL -> NOT ASSIGNABLE 
PARAMS_CALL -> PARAMS_CALL5 LBRACKETR 
PARAMS_CALL -> PARAMS_CALL6 ASSIGNABLE 
PARAMS_CALL -> PARAMS_CALL7 LOGIC_EXPR 
PARAMS_CALL -> SBRACKETL SBRACKETR 
PARAMS_CALL -> PARAMS_CALL8 SBRACKETSR 
PARAMS_CALL -> true 
PARAMS_CALL -> variable 
PARAMS_CALL -> false 
PARAMS_CALL -> string 
PARAMS_CALL1 -> RBRACKETL ASSIGNABLE 
PARAMS_CALL2 -> VARIABLE SBRACKETL 
PARAMS_CALL3 -> PARAMS_CALL2 ASSIGNABLE 
PARAMS_CALL4 -> ASSIGNABLE ARITH_OP 
PARAMS_CALL5 -> RBRACKETL LOGIC_EXPR 
PARAMS_CALL6 -> ASSIGNABLE LOGIC_OP 
PARAMS_CALL7 -> LOGIC_EXPR LOGIC_OP 
PARAMS_CALL8 -> SBRACKETL ARR_ELS 
PARAMS0 -> PARAMS COMMA 
PARAMS -> PARAMS0 PARAMS 
PARAMS -> variable 
FUNCTION_CALL0 -> VARIABLE RBRACKETL 
FUNCTION_CALL1 -> FUNCTION_CALL0 PARAMS_CALL 
FUNCTION_CALL -> FUNCTION_CALL1 RBRACKETR 
FUNCTION_BLOCK0 -> FUNCTION VARIABLE 
FUNCTION_BLOCK1 -> FUNCTION_BLOCK0 RBRACKETL 
FUNCTION_BLOCK2 -> FUNCTION_BLOCK1 PARAMS 
FUNCTION_BLOCK3 -> FUNCTION_BLOCK2 RBRACKETR 
FUNCTION_BLOCK4 -> FUNCTION_BLOCK3 CBRACKETL 
FUNCTION_BLOCK5 -> FUNCTION_BLOCK4 BLOCKS_FUNC 
FUNCTION_BLOCK -> FUNCTION_BLOCK5 CBRACKETR 
FUNC_SENTENCE -> SENTENCE FUNC_SENTENCE 
FUNC_SENTENCE -> RETURN ASSIGNABLE 
FUNC_SENTENCE -> FUNC_SENTENCE0 ASSIGNABLE 
FUNC_SENTENCE -> FUNC_SENTENCE1 SEMICOLONS 
FUNC_SENTENCE -> FUNC_SENTENCE2 ASSIGNABLE 
FUNC_SENTENCE -> VARIABLE INC 
FUNC_SENTENCE -> VARIABLE DEC 
FUNC_SENTENCE -> ASSIGNMENT_TERM VARIABLE 
FUNC_SENTENCE -> FUNC_SENTENCE4 ASSIGNABLE 
FUNC_SENTENCE -> FUNC_SENTENCE6 ASSIGNABLE 
FUNC_SENTENCE -> FUNC_SENTENCE8 RBRACKETR 
FUNC_SENTENCE0 -> FUNC_SENTENCE RETURN 
FUNC_SENTENCE1 -> THROW ASSIGNABLE 
FUNC_SENTENCE2 -> FUNC_SENTENCE THROW 
FUNC_SENTENCE3 -> CONST VARIABLE 
FUNC_SENTENCE4 -> FUNC_SENTENCE3 ASSIGN 
FUNC_SENTENCE5 -> ASSIGNMENT_TERM VARIABLE 
FUNC_SENTENCE6 -> FUNC_SENTENCE5 ASSIGN_OP 
FUNC_SENTENCE7 -> VARIABLE RBRACKETL 
FUNC_SENTENCE8 -> FUNC_SENTENCE7 PARAMS_CALL 
BLOCKS_FUNC -> BLOCK_FUNC BLOCKS_FUNC 
BLOCK_FUNC -> FUNC_SENTENCE SEMICOLONS 
BLOCK_FUNC -> BLOCK_FUNC SEMICOLONS 
BLOCK_FUNC -> BLOCK_FUNC4 RBRACKETL 
BLOCK_FUNC -> BLOCK_FUNC10 ELSE_BLOCK_FUNC 
BLOCK_FUNC -> BLOCK_FUNC17 ELSE_BLOCK_FUNC 
BLOCK_FUNC -> BLOCK_FUNC23 ELIF_BLOCKS_FUNC 
BLOCK_FUNC -> BLOCK SEMICOLONS 
BLOCK_FUNC -> SENTENCE SEMICOLONS 
BLOCK_FUNC -> BLOCK_FUNC28 RBRACKETL 
BLOCK_FUNC -> BLOCK_FUNC34 ELSE_BLOCK 
BLOCK_FUNC -> BLOCK_FUNC41 ELSE_BLOCK 
BLOCK_FUNC -> BLOCK_FUNC47 ELIF_BLOCKS 
BLOCK_FUNC -> BLOCK_FUNC52 RBRACKETL 
BLOCK_FUNC -> BLOCK_FUNC58 CBRACKETR 
BLOCK_FUNC -> BLOCK_FUNC63 CBRACKETR 
BLOCK_FUNC -> BLOCK_FUNC68 CBRACKETR 
BLOCK_FUNC -> BLOCK_FUNC72 CBRACKETR 
BLOCK_FUNC -> TRY_BLOCK FINALLY_BLOCK 
BLOCK_FUNC -> BLOCK_FUNC78 CBRACKETR 
BLOCK_FUNC -> TRY_BLOCK CATCH_BLOCK 
BLOCK_FUNC0 -> IF RBRACKETL 
BLOCK_FUNC1 -> BLOCK_FUNC0 LOGIC_EXPR 
BLOCK_FUNC2 -> BLOCK_FUNC1 RBRACKETR 
BLOCK_FUNC3 -> BLOCK_FUNC2 CBRACKETL 
BLOCK_FUNC4 -> BLOCK_FUNC3 BLOCKS_FUNC 
BLOCK_FUNC5 -> IF RBRACKETL 
BLOCK_FUNC6 -> BLOCK_FUNC5 LOGIC_EXPR 
BLOCK_FUNC7 -> BLOCK_FUNC6 RBRACKETR 
BLOCK_FUNC8 -> BLOCK_FUNC7 CBRACKETL 
BLOCK_FUNC9 -> BLOCK_FUNC8 BLOCKS_FUNC 
BLOCK_FUNC10 -> BLOCK_FUNC9 RBRACKETL 
BLOCK_FUNC11 -> IF RBRACKETL 
BLOCK_FUNC12 -> BLOCK_FUNC11 LOGIC_EXPR 
BLOCK_FUNC13 -> BLOCK_FUNC12 RBRACKETR 
BLOCK_FUNC14 -> BLOCK_FUNC13 CBRACKETL 
BLOCK_FUNC15 -> BLOCK_FUNC14 BLOCKS_FUNC 
BLOCK_FUNC16 -> BLOCK_FUNC15 RBRACKETL 
BLOCK_FUNC17 -> BLOCK_FUNC16 ELIF_BLOCKS 
BLOCK_FUNC18 -> IF RBRACKETL 
BLOCK_FUNC19 -> BLOCK_FUNC18 LOGIC_EXPR 
BLOCK_FUNC20 -> BLOCK_FUNC19 RBRACKETR 
BLOCK_FUNC21 -> BLOCK_FUNC20 CBRACKETL 
BLOCK_FUNC22 -> BLOCK_FUNC21 BLOCKS_FUNC 
BLOCK_FUNC23 -> BLOCK_FUNC22 RBRACKETL 
BLOCK_FUNC24 -> IF RBRACKETL 
BLOCK_FUNC25 -> BLOCK_FUNC24 LOGIC_EXPR 
BLOCK_FUNC26 -> BLOCK_FUNC25 RBRACKETR 
BLOCK_FUNC27 -> BLOCK_FUNC26 CBRACKETL 
BLOCK_FUNC28 -> BLOCK_FUNC27 BLOCKS 
BLOCK_FUNC29 -> IF RBRACKETL 
BLOCK_FUNC30 -> BLOCK_FUNC29 LOGIC_EXPR 
BLOCK_FUNC31 -> BLOCK_FUNC30 RBRACKETR 
BLOCK_FUNC32 -> BLOCK_FUNC31 CBRACKETL 
BLOCK_FUNC33 -> BLOCK_FUNC32 BLOCKS 
BLOCK_FUNC34 -> BLOCK_FUNC33 RBRACKETL 
BLOCK_FUNC35 -> IF RBRACKETL 
BLOCK_FUNC36 -> BLOCK_FUNC35 LOGIC_EXPR 
BLOCK_FUNC37 -> BLOCK_FUNC36 RBRACKETR 
BLOCK_FUNC38 -> BLOCK_FUNC37 CBRACKETL 
BLOCK_FUNC39 -> BLOCK_FUNC38 BLOCKS 
BLOCK_FUNC40 -> BLOCK_FUNC39 RBRACKETL 
BLOCK_FUNC41 -> BLOCK_FUNC40 ELIF_BLOCKS 
BLOCK_FUNC42 -> IF RBRACKETL 
BLOCK_FUNC43 -> BLOCK_FUNC42 LOGIC_EXPR 
BLOCK_FUNC44 -> BLOCK_FUNC43 RBRACKETR 
BLOCK_FUNC45 -> BLOCK_FUNC44 CBRACKETL 
BLOCK_FUNC46 -> BLOCK_FUNC45 BLOCKS 
BLOCK_FUNC47 -> BLOCK_FUNC46 RBRACKETL 
BLOCK_FUNC48 -> WHILE RBRACKETL 
BLOCK_FUNC49 -> BLOCK_FUNC48 LOGIC_EXPR 
BLOCK_FUNC50 -> BLOCK_FUNC49 RBRACKETR 
BLOCK_FUNC51 -> BLOCK_FUNC50 CBRACKETL 
BLOCK_FUNC52 -> BLOCK_FUNC51 BLOCKS_LOOP 
BLOCK_FUNC53 -> SWITCH RBRACKETL 
BLOCK_FUNC54 -> BLOCK_FUNC53 VARIABLE 
BLOCK_FUNC55 -> BLOCK_FUNC54 RBRACKETR 
BLOCK_FUNC56 -> BLOCK_FUNC55 CBRACKETL 
BLOCK_FUNC57 -> BLOCK_FUNC56 CASES_BLOCK 
BLOCK_FUNC58 -> BLOCK_FUNC57 CASE_DEFAULT 
BLOCK_FUNC59 -> SWITCH RBRACKETL 
BLOCK_FUNC60 -> BLOCK_FUNC59 VARIABLE 
BLOCK_FUNC61 -> BLOCK_FUNC60 RBRACKETR 
BLOCK_FUNC62 -> BLOCK_FUNC61 CBRACKETL 
BLOCK_FUNC63 -> BLOCK_FUNC62 CASES_BLOCK 
BLOCK_FUNC64 -> SWITCH RBRACKETL 
BLOCK_FUNC65 -> BLOCK_FUNC64 VARIABLE 
BLOCK_FUNC66 -> BLOCK_FUNC65 RBRACKETR 
BLOCK_FUNC67 -> BLOCK_FUNC66 CBRACKETL 
BLOCK_FUNC68 -> BLOCK_FUNC67 CASE_DEFAULT 
BLOCK_FUNC69 -> SWITCH RBRACKETL 
BLOCK_FUNC70 -> BLOCK_FUNC69 VARIABLE 
BLOCK_FUNC71 -> BLOCK_FUNC70 RBRACKETR 
BLOCK_FUNC72 -> BLOCK_FUNC71 CBRACKETL 
BLOCK_FUNC73 -> FUNCTION VARIABLE 
BLOCK_FUNC74 -> BLOCK_FUNC73 RBRACKETL 
BLOCK_FUNC75 -> BLOCK_FUNC74 PARAMS 
BLOCK_FUNC76 -> BLOCK_FUNC75 RBRACKETR 
BLOCK_FUNC77 -> BLOCK_FUNC76 CBRACKETL 
BLOCK_FUNC78 -> BLOCK_FUNC77 BLOCKS_FUNC 
IF_BLOCK_FUNC0 -> IF RBRACKETL 
IF_BLOCK_FUNC1 -> IF_BLOCK_FUNC0 LOGIC_EXPR 
IF_BLOCK_FUNC2 -> IF_BLOCK_FUNC1 RBRACKETR 
IF_BLOCK_FUNC3 -> IF_BLOCK_FUNC2 CBRACKETL 
IF_BLOCK_FUNC4 -> IF_BLOCK_FUNC3 BLOCKS_FUNC 
IF_BLOCK_FUNC -> IF_BLOCK_FUNC4 RBRACKETL 
IF_BLOCK_FUNC -> IF_BLOCK_FUNC10 ELSE_BLOCK_FUNC 
IF_BLOCK_FUNC -> IF_BLOCK_FUNC17 ELSE_BLOCK_FUNC 
IF_BLOCK_FUNC -> IF_BLOCK_FUNC23 ELIF_BLOCKS_FUNC 
IF_BLOCK_FUNC5 -> IF RBRACKETL 
IF_BLOCK_FUNC6 -> IF_BLOCK_FUNC5 LOGIC_EXPR 
IF_BLOCK_FUNC7 -> IF_BLOCK_FUNC6 RBRACKETR 
IF_BLOCK_FUNC8 -> IF_BLOCK_FUNC7 CBRACKETL 
IF_BLOCK_FUNC9 -> IF_BLOCK_FUNC8 BLOCKS_FUNC 
IF_BLOCK_FUNC10 -> IF_BLOCK_FUNC9 RBRACKETL 
IF_BLOCK_FUNC11 -> IF RBRACKETL 
IF_BLOCK_FUNC12 -> IF_BLOCK_FUNC11 LOGIC_EXPR 
IF_BLOCK_FUNC13 -> IF_BLOCK_FUNC12 RBRACKETR 
IF_BLOCK_FUNC14 -> IF_BLOCK_FUNC13 CBRACKETL 
IF_BLOCK_FUNC15 -> IF_BLOCK_FUNC14 BLOCKS_FUNC 
IF_BLOCK_FUNC16 -> IF_BLOCK_FUNC15 RBRACKETL 
IF_BLOCK_FUNC17 -> IF_BLOCK_FUNC16 ELIF_BLOCKS 
IF_BLOCK_FUNC18 -> IF RBRACKETL 
IF_BLOCK_FUNC19 -> IF_BLOCK_FUNC18 LOGIC_EXPR 
IF_BLOCK_FUNC20 -> IF_BLOCK_FUNC19 RBRACKETR 
IF_BLOCK_FUNC21 -> IF_BLOCK_FUNC20 CBRACKETL 
IF_BLOCK_FUNC22 -> IF_BLOCK_FUNC21 BLOCKS_FUNC 
IF_BLOCK_FUNC23 -> IF_BLOCK_FUNC22 RBRACKETL 
ELSE_BLOCK_FUNC0 -> ELSE CBRACKETL 
ELSE_BLOCK_FUNC1 -> ELSE_BLOCK_FUNC0 BLOCKS_FUNC 
ELSE_BLOCK_FUNC -> ELSE_BLOCK_FUNC1 CBRACKETR 
ELIF_BLOCKS_FUNC -> ELIF_BLOCK_FUNC ELIF_BLOCKS_FUNC 
ELIF_BLOCK_FUNC0 -> ELIF CBRACKETL 
ELIF_BLOCK_FUNC1 -> ELIF_BLOCK_FUNC0 BLOCKS_FUNC 
ELIF_BLOCK_FUNC -> ELIF_BLOCK_FUNC1 CBRACKETR 
TRYCATCH_BLOCK -> TRY_BLOCK CATCH_BLOCK 
TRYFINALLY_BLOCK -> TRY_BLOCK FINALLY_BLOCK 
TRY_BLOCK0 -> TRY CBRACKETL 
TRY_BLOCK1 -> TRY_BLOCK0 BLOCKS 
TRY_BLOCK -> TRY_BLOCK1 CBRACKETR 
TRY_BLOCK -> TRY_BLOCK SEMICOLONS 
CATCH_BLOCK0 -> CATCH CBRACKETL 
CATCH_BLOCK1 -> CATCH_BLOCK0 BLOCKS 
CATCH_BLOCK -> CATCH_BLOCK1 CBRACKETR 
CATCH_BLOCK -> CATCH_BLOCK SEMICOLONS 
FINALLY_BLOCK0 -> FINALLY CBRACKETL 
FINALLY_BLOCK1 -> FINALLY_BLOCK0 BLOCKS 
FINALLY_BLOCK -> FINALLY_BLOCK1 CBRACKETR 
FINALLY_BLOCK -> FINALLY_BLOCK SEMICOLONS 
