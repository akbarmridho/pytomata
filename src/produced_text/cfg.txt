BREAK -> break
CONST -> const
CASE -> case
CATCH -> catch
CONTINUE -> continue
DEFAULT -> default
DELETE -> delete
ELSE -> else
FALSE -> false
FINALLY -> finally
FOR -> for
FUNCTION -> function
IF -> if
ELIF -> elif
LET -> let
NULL -> null
RETURN -> return
SWITCH -> switch
THROW -> throw
WHILE -> while
VAR -> var
TRUE -> true
TRY -> try

VARIABLE -> variable

CBRACKETL -> cbracketl
CBRACKETR -> cbracketr
RBRACKETL -> rbracketl
RBRACKETR -> rbracketr
SBRACKETL -> sbracketl
SBRACKETR -> sbracketr

NEWLINE -> nl
SEMICOLON -> semicolon
COLON -> colon

AR_OPR -> plus
AR_OPR -> minus
AR_OPR -> divide
AR_OPR -> multiply
AR_OPR -> mod
AR_OPR -> pow
AR_OPR -> band
AR_OPR -> bor
AR_OPR -> shift
AR_OPR -> xor

CREMENT -> inc
CREMENT -> dec

COMMA -> comma
QMARK -> qmark
ASSIGN -> assign

EQ_OPR -> greater
EQ_OPR -> greatereq
EQ_OPR -> lesseq
EQ_OPR -> less
EQ_OPR -> equal
EQ_OPR -> nequal

NOT -> not
LOGIC_OPR -> and
LOGIC_OPR -> or
LOGIC_OPR -> EQ_OPR
ASS_OPR -> minuseq
ASS_OPR -> pluseq
ASS_OPR -> divq
ASS_OPR -> multiplyeq
ASS_OPR -> poweq
ASS_OPR -> modeq

NUMBER -> number
STRING -> string

ASSIGNABLE -> NULL
ASSIGNABLE -> VARIABLE
ASSIGNABLE -> NUMBER
ASSIGNABLE -> STRING
ASSIGNABLE -> LOGIC_EXPR
ASSIGNABLE -> RBRACKETL ASSIGNABLE RBRACKETR
ASSIGNABLE -> VARIABLE SBRACKETL ASSIGNABLE SBRACKETR
ASSIGNABLE -> ARRAY
ASSIGNABLE -> ASSIGNABLE ASS_OPR ASSIGNABLE
ASSIGNABLE -> ASSIGNABLE AR_OPR ASSIGNABLE
ASSIGNABLE -> FUNCTION_CALL

LOGIC_EXPR -> TRUE
LOGIC_EXPR -> FALSE
LOGIC_EXPR -> NOT LOGIC_EXPR      
LOGIC_EXPR -> NOT ASSIGNABLE                     
LOGIC_EXPR -> RBRACKETL LOGIC_EXPR RBRACKETR
LOGIC_EXPR -> ASSIGNABLE LOGIC_OPR ASSIGNABLE
LOGIC_EXPR -> LOGIC_EXPR LOGIC_OPR LOGIC_EXPR
LOGIC_EXPR -> VARIABLE
ARRAY -> SBRACKETL SBRACKETR
ARRAY -> SBRACKETL ARR_ELS SBRACKETR

ARR_ELS -> ASSIGNABLE
ARR_ELS -> ARR_ELS COMMA ARR_ELS

S -> NEWLINE S
S -> S NEWLINE
S -> NEWLINE
S -> BLOCKS S
S -> BLOCKS

SEMICOLONS -> SEMICOLON
SEMICOLONS -> SEMICOLON nl
SEMICOLONS -> SEMICOLON SEMICOLONS

BLOCKS -> BLOCK BLOCKS
BLOCKS -> BLOCK

OBJ_VALS -> OBJ_VAL
OBJ_VALS -> OBJ_VAL COMMA OBJ_VALS 
OBJ_VAL -> VARIABLE COLON ASSIGNABLE
OBJECT -> CBRACKETL OBJ_VALS CBRACKETR

BLOCK -> IF_BLOCK
BLOCK -> FUNCTION_BLOCK
BLOCK -> WHILE_BLOCK
BLOCK -> FOR_BLOCK
BLOCK -> SENTENCE
BLOCK -> SWITCH_BLOCK
BLOCK -> THROW_BLOCK
BLOCK -> TRYCATCH_BLOCK
BLOCK -> TRYFINALLY_BLOCK
BLOCK -> TRYCATCHFINALLY_BLOCK
BLOCK -> BLOCK SEMICOLONS

THROW_BLOCK -> THROW RBRACKETL ASSIGNABLE RBRACKETR

SENTENCE -> ASSIGNMENT SEMICOLONS
SENTENCE -> FUNCTION_CALL SEMICOLONS
SENTENCE -> LOGIC_EXPR SEMICOLONS

ASSIGNMENT -> VARIABLE CREMENT
ASSIGNMENT -> ASSIGNMENT_TERM VARIABLE
ASSIGNMENT -> CONST VARIABLE ASSIGN ASSIGNABLE
ASSIGNMENT -> ASSIGNMENT_TERM VARIABLE ASSIGN ASSIGNABLE
ASSIGNMENT -> VARIABLE ASSIGN ASSIGNABLE
ASSIGNMENT -> VARIABLE ASS_OPR ASSIGNABLE

ASSIGNMENT_TERM -> LET
ASSIGNMENT_TERM -> VAR

EMPTY_BLOCK -> CBRACKETL CBRACKETR

IF_BLOCK -> IF RBRACKETL LOGIC_EXPR RBRACKETR CBRACKETL BLOCKS CBRACKETR
IF_BLOCK ->  IF RBRACKETL LOGIC_EXPR RBRACKETR CBRACKETL BLOCKS CBRACKETR ELSE_BLOCK
IF_BLOCK ->  IF RBRACKETL LOGIC_EXPR RBRACKETR CBRACKETL BLOCKS CBRACKETR ELIF_BLOCKS ELSE_BLOCK
IF_BLOCK ->  IF RBRACKETL LOGIC_EXPR RBRACKETR CBRACKETL BLOCKS CBRACKETR ELIF_BLOCKS 
IF_BLOCK -> IF RBRACKETL LOGIC_EXPR RBRACKETR EMPTY_BLOCK

ELSE_BLOCK -> ELSE CBRACKETL BLOCKS CBRACKETR
ELSE_BLOCK -> ELSE EMPTY_BLOCK

ELIF_BLOCKS -> ELIF_BLOCK ELIF_BLOCKS
ELIF_BLOCKS -> ELIF_BLOCK
ELIF_BLOCK -> ELIF RBRACKETL LOGIC_EXPR RBRACKETR CBRACKETL BLOCKS CBRACKETR
ELIF_BLOCK-> ELIF RBRACKETL LOGIC_EXPR RBRACKETR EMPTY_BLOCK

CASE_BLOCK -> CASE ASSIGNABLE COLON BLOCKS
CASE_BLOCK -> CASE ASSIGNABLE COLON BLOCKS BREAK SEMICOLON
CASES_BLOCK -> CASE_BLOCK
CASES_BLOCK -> CASES_BLOCK CASE_BLOCK

CASE_DEFAULT -> DEFAULT COLON BLOCKS
CASE_DEFAULT -> DEFAULT COLON BLOCKS BREAK SEMICOLON

SWITCH_BLOCK -> SWITCH RBRACKETL VARIABLE RBRACKETR CBRACKETL CASES_BLOCK CASE_DEFAULT CBRACKETR
SWITCH_BLOCK -> SWITCH RBRACKETL VARIABLE RBRACKETR CBRACKETL CASES_BLOCK CBRACKETR
SWITCH_BLOCK -> SWITCH RBRACKETL VARIABLE RBRACKETR CBRACKETL CASE_DEFAULT CBRACKETR
SWITCH_BLOCK -> SWITCH RBRACKETL VARIABLE RBRACKETR EMPTY_BLOCK

LOOP_SENTENCE -> SENTENCE 
LOOP_SENTENCE -> BLOCKS_LOOP
LOOP_SENTENCE -> BLOCKS_LOOP CONTINUE 
LOOP_SENTENCE -> BLOCKS_LOOP BREAK 
LOOP_SENTENCE -> BREAK
LOOP_SENTENCE -> CONTINUE

BLOCK_LOOP -> BLOCKS
BLOCKS_LOOP -> BLOCK_LOOP
BLOCK_LOOP -> LOOP_SENTENCE SEMICOLONS
BLOCK_LOOP -> BLOCK_LOOP SEMICOLONS
BLOCK_LOOP -> IF_BLOCK_LOOP
BLOCKS_LOOP -> BLOCK_LOOP BLOCKS_LOOP

IF_BLOCK_LOOP -> IF RBRACKETL LOGIC_EXPR RBRACKETR CBRACKETL BLOCKS_LOOP CBRACKETR
IF_BLOCK_LOOP ->  IF RBRACKETL LOGIC_EXPR RBRACKETR CBRACKETL BLOCKS_LOOP CBRACKETR ELSE_BLOCK_LOOP
IF_BLOCK_LOOP ->  IF RBRACKETL LOGIC_EXPR RBRACKETR CBRACKETL BLOCKS_LOOP CBRACKETR ELIF_BLOCKS ELSE_BLOCK_LOOP
IF_BLOCK_LOOP ->  IF RBRACKETL LOGIC_EXPR RBRACKETR CBRACKETL BLOCKS_LOOP CBRACKETR 

ELIF_BLOCKS_LOOP -> ELIF_BLOCK_LOOP ELIF_BLOCKS_LOOP
ELIF_BLOCKS_LOOP -> ELIF_BLOCK_LOOP
ELIF_BLOCK_LOOP -> ELIF RBRACKETL LOGIC_EXPR RBRACKETR CBRACKETL BLOCKS_LOOP CBRACKETR

ELSE_BLOCK_LOOP -> ELSE CBRACKETL BLOCKS_LOOP CBRACKETR

WHILE_BLOCK -> WHILE RBRACKETL LOGIC_EXPR RBRACKETR CBRACKETL BLOCKS_LOOP CBRACKETR
WHILE_BLOCK -> WHILE RBRACKETL LOGIC_EXPR RBRACKETR EMPTY_BLOCK

FOR_BLOCK -> FOR RBRACKETL ASSIGNMENT SEMICOLON LOGIC_EXPR SEMICOLON ASSIGNMENT RBRACKETR CBRACKETL BLOCKS_LOOP CBRACKETR
FOR_BLOCK -> FOR RBRACKETL ASSIGNMENT SEMICOLON LOGIC_EXPR SEMICOLON ASSIGNMENT RBRACKETR EMPTY_BLOCK

PARAMS_CALL -> ASSIGNABLE
PARAMS_CALL -> PARAMS_CALL COMMA PARAMS_CALL 

PARAMS -> VARIABLE
PARAMS -> PARAMS COMMA PARAMS

FUNCTION_CALL -> VARIABLE RBRACKETL PARAMS_CALL RBRACKETR
FUNCTION_CALL -> VARIABLE RBRACKETL RBRACKETR

FUNCTION_BLOCK -> FUNCTION VARIABLE RBRACKETL PARAMS RBRACKETR CBRACKETL BLOCKS_FUNC CBRACKETR 
FUNCTION_BLOCK -> FUNCTION VARIABLE RBRACKETL PARAMS RBRACKETR EMPTY_BLOCK
FUNCTION_BLOCK -> FUNCTION VARIABLE RBRACKETL RBRACKETR CBRACKETL BLOCKS_FUNC CBRACKETR 
FUNCTION_BLOCK -> FUNCTION VARIABLE RBRACKETL RBRACKETR EMPTY_BLOCK

FUNC_SENTENCE -> SENTENCE 
FUNC_SENTENCE -> SENTENCE FUNC_SENTENCE
FUNC_SENTENCE -> RETURN ASSIGNABLE 
FUNC_SENTENCE -> FUNC_SENTENCE RETURN ASSIGNABLE 
FUNC_SENTENCE -> THROW ASSIGNABLE SEMICOLONS
FUNC_SENTENCE -> FUNC_SENTENCE THROW ASSIGNABLE 

BLOCKS_FUNC -> BLOCKS
BLOCKS_FUNC -> BLOCK_FUNC
BLOCKS_FUNC -> BLOCK_FUNC BLOCKS_FUNC
BLOCK_FUNC -> FUNC_SENTENCE SEMICOLONS
BLOCK_FUNC -> IF_BLOCK_FUNC
BLOCK_FUNC -> FOR_BLOCK_FUNC
BLOCK_FUNC -> BLOCK
BLOCK_FUNC -> SENTENCE
BLOCK_FUNC -> BLOCK_FUNC SEMICOLONS

IF_BLOCK_FUNC -> IF RBRACKETL LOGIC_EXPR RBRACKETR CBRACKETL BLOCKS_FUNC CBRACKETR
IF_BLOCK_FUNC ->  IF RBRACKETL LOGIC_EXPR RBRACKETR CBRACKETL BLOCKS_FUNC CBRACKETR ELSE_BLOCK_FUNC
IF_BLOCK_FUNC ->  IF RBRACKETL LOGIC_EXPR RBRACKETR CBRACKETL BLOCKS_FUNC CBRACKETR ELIF_BLOCKS_FUNC ELSE_BLOCK_FUNC
IF_BLOCK_FUNC ->  IF RBRACKETL LOGIC_EXPR RBRACKETR CBRACKETL BLOCKS_FUNC CBRACKETR ELIF_BLOCKS_FUNC 

ELIF_BLOCKS_FUNC -> ELIF_BLOCK_FUNC ELIF_BLOCKS_FUNC
ELIF_BLOCK_FUNC -> ELIF RBRACKETL LOGIC_EXPR RBRACKETR CBRACKETL BLOCKS_FUNC CBRACKETR
ELIF_BLOCKS_FUNC -> ELIF_BLOCK_FUNC
ELSE_BLOCK_FUNC -> ELSE CBRACKETL BLOCKS_FUNC CBRACKETR

BLOCK_LOOP_FUNC -> BLOCKS_LOOP
BLOCK_LOOP_FUNC -> BLOCKS_FUNC
BLOCKS_LOOP_FUNC -> BLOCK_LOOP_FUNC
BLOCKS_LOOP_FUNC -> BLOCK_LOOP_FUNC BLOCKS_LOOP_FUNC

WHILE_BLOCK_FUNC -> WHILE RBRACKETL LOGIC_EXPR RBRACKETR CBRACKETL BLOCKS_LOOP_FUNC CBRACKETR
WHILE_BLOCK_FUNC -> WHILE RBRACKETL LOGIC_EXPR RBRACKETR EMPTY_BLOCK

FOR_BLOCK_FUNC -> FOR RBRACKETL ASSIGNMENT SEMICOLON LOGIC_EXPR SEMICOLON ASSIGNMENT RBRACKETR CBRACKETL BLOCKS_LOOP_FUNC CBRACKETR
FOR_BLOCK_FUNC -> FOR RBRACKETL ASSIGNMENT SEMICOLON LOGIC_EXPR SEMICOLON ASSIGNMENT RBRACKETR EMPTY_BLOCK

TRYCATCH_BLOCK -> TRY_BLOCK CATCH_BLOCK
TRYFINALLY_BLOCK -> TRY_BLOCK FINALLY_BLOCK
TRYCATCHFINALLY_BLOCK -> TRY_BLOCK CATCH_BLOCK FINALLY_BLOCK

TRY_BLOCK -> TRY CBRACKETL BLOCKS CBRACKETR
TRY_BLOCK -> TRY EMPTY_BLOCK
TRY_BLOCK -> TRY_BLOCK SEMICOLONS

CATCH_BLOCK -> CATCH CBRACKETL BLOCKS CBRACKETR
CATCH_BLOCK -> CATCH EMPTY_BLOCK
CATCH_BLOCK -> CATCH RBRACKETL VARIABLE RBRACKETR CBRACKETL BLOCKS CBRACKETR
CATCH_BLOCK -> CATCH_BLOCK SEMICOLONS

FINALLY_BLOCK -> FINALLY CBRACKETL BLOCKS CBRACKETR
FINALLY_BLOCK -> FINALLY EMPTY_BLOCK
FINALLY_BLOCK -> FINALLY_BLOCK SEMICOLONS